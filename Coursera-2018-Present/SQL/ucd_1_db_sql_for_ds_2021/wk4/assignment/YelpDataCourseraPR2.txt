Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000 
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 1000
viii. Tip = 3979
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: Yes
	
	
	SQL code used to arrive at answer:

SELECT *
  FROM User
  WHERE id IS NULL OR
    name IS NULL OR
    review_count IS NULL OR
    yelping_since IS NULL OR
    useful IS NULL OR
    funny IS NULL OR
    cool IS NULL OR
    fans IS NULL OR
    average_stars IS NULL OR
    compliment_hot IS NULL OR
    compliment_more IS NULL OR
    compliment_profile IS NULL OR
    compliment_cute IS NULL OR
    compliment_list IS NULL OR
    compliment_note IS NULL OR
    compliment_plain IS NULL OR
    compliment_cool IS NULL OR
    compliment_funny IS NULL OR
    compliment_writer IS NULL OR
    compliment_photos
	
	
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 

SELECT city, SUM(review_count) AS total_reviews
  FROM business
  GROUP BY city
  ORDER BY SUM(review_count) DESC
	
	
	Copy and Paste the Result Below:
	
+-----------------+---------------+
| city            | total_reviews |
+-----------------+---------------+
| Las Vegas       |         82854 |
| Phoenix         |         34503 |
| Toronto         |         24113 |
| Scottsdale      |         20614 |
| Charlotte       |         12523 |
| Henderson       |         10871 |
| Tempe           |         10504 |
| Pittsburgh      |          9798 |
| Montréal        |          9448 |
| Chandler        |          8112 |
| Mesa            |          6875 |
| Gilbert         |          6380 |
| Cleveland       |          5593 |
| Madison         |          5265 |
| Glendale        |          4406 |
| Mississauga     |          3814 |
| Edinburgh       |          2792 |
| Peoria          |          2624 |
| North Las Vegas |          2438 |
| Markham         |          2352 |
| Champaign       |          2029 |
| Stuttgart       |          1849 |
| Surprise        |          1520 |
| Lakewood        |          1465 |
| Goodyear        |          1155 |
+-----------------+---------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, COUNT(stars) AS frequency
  FROM business
  WHERE city = 'Avon'
  GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-----------+
| stars | frequency |
+-------+-----------+
|   1.5 |         1 |
|   2.5 |         2 |
|   3.5 |         3 |
|   4.0 |         2 |
|   4.5 |         1 |
|   5.0 |         1 |
+-------+-----------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, COUNT(stars) AS frequency
  FROM business
  WHERE city = 'Beachwood'
  GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------+-----------+
| stars | frequency |
+-------+-----------+
|   2.0 |         1 |
|   2.5 |         1 |
|   3.0 |         2 |
|   3.5 |         2 |
|   4.0 |         1 |
|   4.5 |         2 |
|   5.0 |         5 |
+-------+-----------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT name, SUM(review_count) AS total_reviews
  FROM user
  GROUP BY name
  ORDER BY SUM(review_count) DESC
  LIMIT 3
		
	Copy and Paste the Result Below:

+--------+---------------+
| name   | total_reviews |
+--------+---------------+
| Nicole |          2397 |
| Sara   |          2253 |
| Gerald |          2034 |
+--------+---------------+
		

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
It does indeed! People with the lowest number of fans (0) mostly have under 50 reviews,

whereas those with 100 fans or over all mostly over 1000 reviews. 

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

There are more reviews containing the word love (1780), than those containing the word hate (232).

	
	SQL code used to arrive at answer:

SELECT COUNT(*)
  FROM review
  WHERE text LIKE '%love%'
	
SELECT COUNT(*)
  FROM review
  WHERE text LIKE '%hate%'

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
SELECT name, SUM(fans) AS total_fans
  FROM user
  GROUP BY name
  ORDER BY SUM(fans) DESC
  LIMIT 10
	
	Copy and Paste the Result Below:

+-----------+------------+
| name      | total_fans |
+-----------+------------+
| Amy       |        519 |
| Mimi      |        498 |
| Harald    |        311 |
| Gerald    |        256 |
| Lisa      |        207 |
| Nicole    |        200 |
| Christine |        187 |
| Mark      |        156 |
| Jen       |        148 |
| Linda     |        148 |
+-----------+------------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

Yes, they do. It appears lower star ratings have longer hours, whereas more highly rated places have more select hours. 

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes, they do. Partly because restaurants in Toronto are more in number than the number of bars.          
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Yes. It appears a good number of restaurants are clustered around Willowdale, and the Downtown Core area in Toronto. 

Meanwhile, the bars seem a little more insterspersed throughout the city. 

SQL code used for analysis:
SELECT name, city, category, neighborhood
  FROM business, category
  WHERE business.id = category.business_id
    AND city = 'Toronto'
    AND category IN ('Restaurants', 'Bars')
  GROUP BY name, category
  ORDER BY category
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

Total closed businesses = 1520, total open businesses = 8480

The total number of reviews received by open businesses (269,300) far exceeds, that of closed ones (35,261).
         
         
ii. Difference 2:

The average number of stars rating too is slightly higher for open businesses (3.679) than for closed ones (3.520).         
         
         
SQL code used for analysis:

SELECT is_open, SUM(review_count), AVG(stars)
  FROM business
  GROUP BY is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

I would like to use all the relevant numeric variables to predict the number of stars a business receives.           
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

In order to predict the number of stars a business receives, we will first need to restrict our data to numeric variables only. Categorical or text 
variables could be one-hot encoded in an extension of this analysis. Further, we would like to restrict our numeric variables to relevant ones, and 
to ensure we prevent double-counting (or redundamcy) for variables that are present in multiple tables. 

This data will require us to join 2 tables, Business, and Review. The stars variable in the business dataset will be our target variable. 
Variables such as review count, and whether a review was funny, cool or useful, will all be used to predict the number of stars a business receives. 
We will transfer the queried data to a csv file, and analyze it using a simple linear regression model in python.                            
                  
iii. Output of your finished dataset:

+------------------------+-------+--------------+------------------------+--------+-------+------+
| id                     | stars | review_count | id                     | useful | funny | cool |
+------------------------+-------+--------------+------------------------+--------+-------+------+
| -17Uz92KtnWOpeEGVvg17g |   1.0 |            3 | -17Uz92KtnWOpeEGVvg17g |      0 |     0 |    0 |
| -1ea69SVW-MJsaGQrA48dQ |   2.0 |            4 | -1ea69SVW-MJsaGQrA48dQ |      0 |     0 |    0 |
| -2q4dnUw0gGJniGW2aPamQ |   2.0 |            4 | -2q4dnUw0gGJniGW2aPamQ |      0 |     0 |    0 |
| -2ToCaDFpTNmmg3QFzxcWg |   1.5 |          427 | -2ToCaDFpTNmmg3QFzxcWg |      3 |     0 |    2 |
| -33_OPx1aKM22qxioPgJ_Q |   3.0 |            8 | -33_OPx1aKM22qxioPgJ_Q |      0 |     0 |    1 |
| -3bL-QmK7-qBYLmQuSekBw |   5.0 |            4 | -3bL-QmK7-qBYLmQuSekBw |      2 |     0 |    0 |
| -3s8ZRAH-mb-d2lbRc-doQ |   2.0 |            4 | -3s8ZRAH-mb-d2lbRc-doQ |      0 |     0 |    0 |
| -3ZKe67EhB3m0MJaK9YouQ |   5.0 |            5 | -3ZKe67EhB3m0MJaK9YouQ |      1 |     0 |    0 |
| -46pFijv3f2jZH-_Ze6CQA |   4.0 |           20 | -46pFijv3f2jZH-_Ze6CQA |      1 |     0 |    1 |
| -5-YYvq8Pel6aHt7Wu_IHA |   5.0 |            6 | -5-YYvq8Pel6aHt7Wu_IHA |      4 |     0 |    0 |
| -649HdHuChGUfmUc-JcGpA |   1.5 |            4 | -649HdHuChGUfmUc-JcGpA |      0 |     0 |    0 |
| -6nS5flLpZcJOB2F3JfbNA |   3.5 |            7 | -6nS5flLpZcJOB2F3JfbNA |      0 |     0 |    0 |
| -73xAVllMh_O2nEAcGtbvQ |   3.0 |            7 | -73xAVllMh_O2nEAcGtbvQ |      1 |     0 |    1 |
| -7bk_wSElWccm6R1IjYh1Q |   2.0 |            5 | -7bk_wSElWccm6R1IjYh1Q |      0 |     0 |    0 |
+------------------------+-------+--------------+------------------------+--------+-------+------+         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT business.id, business.stars, business.review_count, review.id, review.useful, review.funny, review.cool
  FROM business INNER JOIN review
  ON business.id = review.id

